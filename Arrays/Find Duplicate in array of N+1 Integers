// Approach 1: Sort
// Approach 2: Two Loops
// Approach 3: Hashing
/* Approach 4: Tortoise and Hare Approach-> BY HEART 
   Remember that this makes an cycle
*/

class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        
        int slow = nums[0];
        int fast = nums[0];
        
        do{
           slow = nums[slow]; 
           fast = nums[nums[fast]];
        }while(slow!=fast);
        
        fast=nums[0];
        
        while(fast!=slow){
            slow=nums[slow];
            fast=nums[fast];
        }
        
        return slow;
        
    }
};
